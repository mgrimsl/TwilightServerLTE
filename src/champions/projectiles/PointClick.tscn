[gd_scene load_steps=4 format=3 uid="uid://cbfqmd6077feo"]

[sub_resource type="GDScript" id="GDScript_kpcik"]
script/source = "extends Area3D

var type = \"\"
var effect = \"\"
var collider = \"\"
var mesh = \"\"

var range = -1
var minRange = 1.2
var size = 1
var tarvelDistance = 5
var damge = 20
var speed = 99
var acceleration = 0
var growth = 0
var channel = 0.25
var cooldown = 1
var travelType = \"fixed\"

var travel : Callable
var dest = Vector3()
var velocity = Vector3.ZERO
var start = Vector3()
var constantTravel = false
var travelDistance = 7
var own
var active = false
@onready var timer : Timer = $DebuffTimer
var target

func _ready():
	visible = false;
	active = false;

func init(player, targetNode):
	target = targetNode
	start = Vector3(player.position.x,1,player.position.z)  
	dest = target.position
	start += start.direction_to(dest) * 1
	transform.origin = start
	match travelType:
		\"fixed\":
			travel = fixedTravel
		\"target\":
			travel = targetTravel
	visible = true;
	active = true;
func _physics_process(_delta):
	if !active:
		return
	dest = target.position
	travel.call()

func fixedTravel():
	if(position.distance_to(start) > travelDistance && active ):
		_ready()
		return
	velocity = start.direction_to(dest) * speed
	transform.origin += velocity

func targetTravel():
	if(position.distance_to(dest) < 1  && active):
		_ready()
		return
	velocity = position.direction_to(dest) * speed
	transform.origin += velocity
	
func _on_body_entered(body):
	if body == target:
		#body.hit(damage, name, get_parent())
		_ready()

"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_vtckj"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_yn8uc"]

[node name="PointClick" type="Area3D"]
transform = Transform3D(0.3, 0, 0, 0, 0.3, 0, 0, 0, 0.3, 0, 0, 0)
script = SubResource("GDScript_kpcik")

[node name="CollisionShape2D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_vtckj")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_yn8uc")

[node name="Effect" type="Node" parent="."]

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
